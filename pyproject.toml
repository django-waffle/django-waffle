[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=61.2" ]

[project]
name = "django-waffle"
description = "A feature flipper for Django."
readme = "README.rst"
license = { text = "BSD" }
authors = [ { name = "James Socol", email = "me@jamessocol.com" } ]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = [ "version" ]
dependencies = [ "django>=3.2" ]

urls.Homepage = "http://github.com/django-waffle/django-waffle"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.dynamic]
version = { attr = "waffle.__version__" }

[tool.setuptools.packages.find]
exclude = [ "test_app" ] # test_settings
namespaces = false

[tool.setuptools.package-data]
waffle = [ "py.typed" ]

[tool.ruff]
target-version = "py38"

line-length = 120
lint.select = [
  "AIR",   # Airflow
  "ASYNC", # flake8-async
  "BLE",   # flake8-blind-except
  "C90",   # McCabe cyclomatic complexity
  "DJ",    # flake8-django
  "DTZ",   # flake8-datetimez
  "E",     # pycodestyle errors
  "F",     # Pyflakes
  "FIX",   # flake8-fixme
  "FLY",   # flynt
  "G",     # flake8-logging-format
  "ICN",   # flake8-import-conventions
  "INP",   # flake8-no-pep420
  "INT",   # flake8-gettext
  "NPY",   # NumPy-specific rules
  "PD",    # pandas-vet
  "PIE",   # flake8-pie
  "PL",    # Pylint
  "PYI",   # flake8-pyi
  "RSE",   # flake8-raise
  "SLOT",  # flake8-slots
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "TD",    # flake8-todos
  "TID",   # flake8-tidy-imports
  "UP",    # pyupgrade
  "W",     # pycodestyle warnings
  "YTT",   # flake8-2020
  # "A",    # flake8-builtins
  # "ANN",  # flake8-annotations
  # "ARG",  # flake8-unused-arguments
  # "B",    # flake8-bugbear
  # "C4",   # flake8-comprehensions
  # "COM",  # flake8-commas
  # "CPY",    # flake8-copyright
  # "D",    # pydocstyle
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "EXE",  # flake8-executable
  # "FA",   # flake8-future-annotations
  # "FBT",  # flake8-boolean-trap
  # "I",    # isort
  # "ISC",  # flake8-implicit-str-concat
  # "N",    # pep8-naming
  # "PERF", # Perflint
  # "PGH",  # pygrep-hooks
  # "PT",   # flake8-pytest-style
  # "PTH",  # flake8-use-pathlib
  # "Q",    # flake8-quotes
  # "RET",  # flake8-return
  # "RUF",  # Ruff-specific rules
  # "S",    # flake8-bandit
  # "SIM",  # flake8-simplify
  # "SLF",  # flake8-self
  # "TCH",  # flake8-type-checking
  # "TRY",  # tryceratops
]
lint.ignore = [ "F401" ]
# Files not checked:
#  - migrations: most of these are autogenerated and don't need a check
#  - docs: contains autogenerated code that doesn't need a check
lint.exclude = [
  "*/migrations/*",
  "docs",
]
lint.per-file-ignores."docs/conf.py" = [ "INP001" ]
lint.per-file-ignores."test_app/models.py" = [ "DJ008" ] # FIXME
lint.per-file-ignores."waffle/models.py" = [ "DJ012", "PYI019" ] # FIXME
lint.mccabe.max-complexity = 23
lint.pylint.allow-magic-value-types = [ "float", "int", "str" ]
lint.pylint.max-args = 6 # default is 5
lint.pylint.max-branches = 23 # default is 12
lint.pylint.max-returns = 13 # default is 6
lint.pylint.max-statements = 51 # default is 50

[tool.codespell]
ignore-words-list = "assertin"
skip = "*.po"

[tool.mypy]
python_version = "3.8"
exclude = "waffle/tests"
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
strict_equality = true

[[tool.mypy.overrides]]
module = [ "django.*" ]
ignore_missing_imports = true
